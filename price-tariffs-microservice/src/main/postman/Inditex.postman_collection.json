{
	"info": {
		"_postman_id": "ed83cceb-8ece-411b-bc6d-96285604cb78",
		"name": "Inditex",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30810575"
	},
	"item": [
		{
			"name": "Find Price Tariff (Missing All parameters)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns the expected HTTP Status\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Message Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"Required String parameter 'date' is not present\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:7070/price-tariffs/find",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"price-tariffs",
						"find"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find Price Tariff (Missing Date parameter)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns the expected HTTP Status\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Message Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"Required String parameter 'date' is not present\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:7070/price-tariffs/find?productId=35455&brandId=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"price-tariffs",
						"find"
					],
					"query": [
						{
							"key": "productId",
							"value": "35455"
						},
						{
							"key": "brandId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Find Price Tariff (Missing BrandId parameter)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns the expected HTTP Status\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Message Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"Required String parameter 'brandId' is not present\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:7070/price-tariffs/find?date=2024-11-09T22:00:00Z&productId=35455",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"price-tariffs",
						"find"
					],
					"query": [
						{
							"key": "date",
							"value": "2024-11-09T22:00:00Z"
						},
						{
							"key": "productId",
							"value": "35455"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Find Price Tariff (Missing ProductId parameter)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns the expected HTTP Status\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Message Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"Required String parameter 'productId' is not present\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:7070/price-tariffs/find?date=2024-11-09T22:00:00Z&brandId=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"price-tariffs",
						"find"
					],
					"query": [
						{
							"key": "date",
							"value": "2024-11-09T22:00:00Z"
						},
						{
							"key": "brandId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Find Price Tariff (Wrong BrandId parameter)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns the expected HTTP Status\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Message Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"Brand does not exist\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:7070/price-tariffs/find?date=2024-11-09T22:00:00Z&productId=35455&brandId=12345",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"price-tariffs",
						"find"
					],
					"query": [
						{
							"key": "date",
							"value": "2024-11-09T22:00:00Z"
						},
						{
							"key": "productId",
							"value": "35455"
						},
						{
							"key": "brandId",
							"value": "12345"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Find Price Tariff (Wrong ProductId parameter)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns the expected HTTP Status\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Message Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"Product does not exist\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:7070/price-tariffs/find?date=2024-11-09T22:00:00Z&productId=2254&brandId=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"price-tariffs",
						"find"
					],
					"query": [
						{
							"key": "date",
							"value": "2024-11-09T22:00:00Z"
						},
						{
							"key": "productId",
							"value": "2254"
						},
						{
							"key": "brandId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Find Price Tariff (All parameters) (Not found)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns the expected HTTP Status\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Message Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"Could not find a price tariff for the requested parameters\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:7070/price-tariffs/find?date=2024-11-09T22:00:00Z&productId=35455&brandId=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"price-tariffs",
						"find"
					],
					"query": [
						{
							"key": "date",
							"value": "2024-11-09T22:00:00Z"
						},
						{
							"key": "productId",
							"value": "35455"
						},
						{
							"key": "brandId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Find Price Tariff (Test 1)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns the expected HTTP Status\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns the expected Price ID\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.priceId).to.eql(1);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:7070/price-tariffs/find?date=2020-06-14T10:00:00Z&productId=35455&brandId=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"price-tariffs",
						"find"
					],
					"query": [
						{
							"key": "date",
							"value": "2020-06-14T10:00:00Z"
						},
						{
							"key": "productId",
							"value": "35455"
						},
						{
							"key": "brandId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Find Price Tariff (Test 2)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns the expected HTTP Status\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns the expected Price ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.priceId).to.eql(2);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:7070/price-tariffs/find?date=2020-06-14T16:00:00Z&productId=35455&brandId=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"price-tariffs",
						"find"
					],
					"query": [
						{
							"key": "date",
							"value": "2020-06-14T16:00:00Z"
						},
						{
							"key": "productId",
							"value": "35455"
						},
						{
							"key": "brandId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Find Price Tariff (Test 3)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns the expected HTTP Status\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns the expected Price ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.priceId).to.eql(1);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:7070/price-tariffs/find?date=2020-06-14T21:00:00Z&productId=35455&brandId=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"price-tariffs",
						"find"
					],
					"query": [
						{
							"key": "date",
							"value": "2020-06-14T21:00:00Z"
						},
						{
							"key": "productId",
							"value": "35455"
						},
						{
							"key": "brandId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Find Price Tariff (Test 4)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns the expected HTTP Status\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns the expected Price ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.priceId).to.eql(3);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:7070/price-tariffs/find?date=2020-06-15T10:00:00Z&productId=35455&brandId=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"price-tariffs",
						"find"
					],
					"query": [
						{
							"key": "date",
							"value": "2020-06-15T10:00:00Z"
						},
						{
							"key": "productId",
							"value": "35455"
						},
						{
							"key": "brandId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Find Price Tariff (Test 5)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns the expected HTTP Status\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns the expected Price ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.priceId).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:7070/price-tariffs/find?date=2020-06-16T21:00:00Z&productId=35455&brandId=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"price-tariffs",
						"find"
					],
					"query": [
						{
							"key": "date",
							"value": "2020-06-16T21:00:00Z"
						},
						{
							"key": "productId",
							"value": "35455"
						},
						{
							"key": "brandId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		}
	]
}