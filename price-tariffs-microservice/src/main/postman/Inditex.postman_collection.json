{
	"info": {
		"_postman_id": "ed83cceb-8ece-411b-bc6d-96285604cb78",
		"name": "Inditex",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30810575"
	},
	"item": [
		{
			"name": "Find Price Tariff (Missing parameters)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Message Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"Required parameter 'date' is missing\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:7070/price-tariffs/find",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"price-tariffs",
						"find"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find Price Tariff (Missing BrandId parameter)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Message Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"Required parameter 'brandId' is missing\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"date\": \"2024-11-09T22:00:00.000000Z\",\r\n    \"productId\": \"35455\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:7070/price-tariffs/find",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"price-tariffs",
						"find"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find Price Tariff (Wrong BrandId parameter)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Message Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"Brand does not exist\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"date\": \"2024-11-09T22:00:00.000000Z\",\r\n    \"productId\": \"35455\",\r\n    \"brandId\": \"12345\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:7070/price-tariffs/find",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"price-tariffs",
						"find"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find Price Tariff (Wrong ProductId parameter)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Message Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"Product does not exist\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"date\": \"2024-11-09T22:00:00.000000Z\",\r\n    \"productId\": \"2254\",\r\n    \"brandId\": \"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:7070/price-tariffs/find",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"price-tariffs",
						"find"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find Price Tariff (All parameters) (Not found)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Message Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"Could not find a price tariff for the requested parameters\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"date\": \"2024-11-09T22:00:00.000000Z\",\r\n    \"productId\": \"35455\",\r\n    \"brandId\": \"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:7070/price-tariffs/find",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"price-tariffs",
						"find"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find Price Tariff (Test 1)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns the expected Price ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.priceId).to.eql(1);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"date\": \"2020-06-14T10:00:00.000000Z\",\r\n    \"productId\": \"35455\",\r\n    \"brandId\": \"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:7070/price-tariffs/find",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"price-tariffs",
						"find"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find Price Tariff (Test 2)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns the expected Price ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.priceId).to.eql(2);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"date\": \"2020-06-14T16:00:00.000000Z\",\r\n    \"productId\": \"35455\",\r\n    \"brandId\": \"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:7070/price-tariffs/find",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"price-tariffs",
						"find"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find Price Tariff (Test 3)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns the expected Price ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.priceId).to.eql(1);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"date\": \"2020-06-14T21:00:00.000000Z\",\r\n    \"productId\": \"35455\",\r\n    \"brandId\": \"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:7070/price-tariffs/find",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"price-tariffs",
						"find"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find Price Tariff (Test 4)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns the expected Price ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.priceId).to.eql(3);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"date\": \"2020-06-15T10:00:00.000000Z\",\r\n    \"productId\": \"35455\",\r\n    \"brandId\": \"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:7070/price-tariffs/find",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"price-tariffs",
						"find"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find Price Tariff (Test 5)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns the expected Price ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.priceId).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"date\": \"2020-06-16T21:00:00.000000Z\",\r\n    \"productId\": \"35455\",\r\n    \"brandId\": \"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:7070/price-tariffs/find",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"price-tariffs",
						"find"
					]
				}
			},
			"response": []
		}
	]
}